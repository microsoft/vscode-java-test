mixin collapseMethodTable(children, type)
    - var regex = /(\s?at\s+)([\w$\\.]+\/)?((?:[\w$]+\.)+[<\w$>]+)\(([\w-$]+\.java:\d+)\)/
    - var classIdx = 0
    //- See https://github.com/pugjs/pug/issues/2559#issuecomment-289873794 for iterating a map in Pug
    each entry in [...children]
        - classIdx++
        ul.list-group.mb-3
            li.list-group-item.active(tabindex="0", aria-label=`Class: ${entry[0]}`)
                h5.mb-0.text-truncate-left #{entry[0]}
            - var methodIdx = 0
            each method in entry[1]
                - methodIdx++
                li.list-group-item.list-group-item-action
                    div.row.accordion
                        a.col-7.method-link.collapsed.px-1(id=`${type}-${classIdx}-${methodIdx}-title`, href="", role="button", data-toggle="collapse", data-target=`#${type}-${classIdx}-${methodIdx}-detail`, aria-expanded="false", aria-controls=`${type}-${classIdx}-${methodIdx}-detail`, aria-label=`${method.status} method: ${method.displayName}.`)
                            div.text-truncate
                                include /images/chevron-right.svg
                                span.ml-1 #{method.displayName}
                        div.col-2.text-right.p-0
                            if !method.status
                                span.badge.badge-warning Not run
                            else if method.status === 'Pass'
                                span.badge.badge-success Passed
                            else if method.status === 'Fail'
                                span.badge.badge-danger Failed
                            else
                                span.badge.badge-secondary Skipped
                        div.col-2.text-right.p-0 #{method.duration >= 0 ? parseFloat((method.duration/1000).toFixed(2)) + "s" : "N/A"}
                        div.col-1.text-right.px-1
                            a(href="#", title="Navigate to Source", uri=`${method.location && method.location.uri ? method.location.uri : ''}`, range=`${method.location && method.location.range ? JSON.stringify(method.location.range) : ''}`, fullname=`${method.fullName}`)
                                include /images/go-to-file.svg
                    div.mt-2.pl-2(id=`${type}-${classIdx}-${methodIdx}-detail`, class="collapse", aria-labelledby=`${type}-${classIdx}-${methodIdx}-title`, tabindex="0")
                        div.row
                            div.col
                                h6 Message:
                        div.row
                            div.col.mb-1 #{method.message ? method.message : "N/A"}
                        div.row
                            div.col
                                h6 Stack trace:
                        div.row
                            div.col
                                if method.trace
                                    pre.pre-wrap
                                        - var traces = method.trace.split(/^Caused by:/gm)
                                        code.word-break-all
                                            each val, idx in traces
                                                if idx > 0
                                                    br
                                                    span.text-warning Caused by:
                                                if canResolveStackTrace
                                                    - var lines = traces[idx].split(/\r?\n/g);
                                                    each line in lines
                                                        - var result = regex.exec(line);
                                                        if result && result.length === 5
                                                            span #{result[1] + (result[2] || "") + result[3]}(
                                                                a(href="#" fullName=`${method.fullName}` trace=`${line}`) #{result[4]}
                                                                | )
                                                        else
                                                            span #{line}
                                                        br
                                                else
                                                    span #{traces[idx]}
                                else
                                    span N/A