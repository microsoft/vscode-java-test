name: $(Date:yyyyMMdd).$(Rev:r)
variables:
  - name: Codeql.Enabled
    value: true
resources:
  repositories:
    - repository: self
      type: git
      ref: refs/heads/main
    - repository: MicroBuildTemplate
      type: git
      name: 1ESPipelineTemplates/MicroBuildTemplate
trigger: none
extends:
  template: azure-pipelines/MicroBuild.1ES.Official.yml@MicroBuildTemplate
  parameters:
    pool:
      name: MSEngSS-MicroBuild2022-1ES
      os: windows
    stages:
      - stage: Build
        jobs:
          - job: Job_1
            displayName: VSCode-Test-Runner-RC
            templateContext:
              mb:
                signing:
                  enabled: true
                  signType: real
                  zipSources: false
                  feedSource: 'https://mseng.pkgs.visualstudio.com/DefaultCollection/_packaging/MicroBuildToolset/nuget/v3/index.json'
              outputs:
                - output: pipelineArtifact
                  artifactName: extension
                  targetPath: $(Build.ArtifactStagingDirectory)
                  displayName: "Publish Artifact: extension"
            steps:
              - checkout: self
                fetchTags: true
              - task: UseNode@1
                displayName: Use Node 20.x
                inputs:
                  version: '20.x'
              # The image does not have jdk preinstalled, we need to download it first.
              - task: PowerShell@2
                displayName: Download JDK 21
                inputs:
                  targetType: 'inline'
                  script: |-
                    New-Item -ItemType Directory -Path "$env:AGENT_TEMPDIRECTORY\downloadjdk"
                    Invoke-WebRequest -Uri "https://aka.ms/download-jdk/microsoft-jdk-21-windows-x64.zip" -OutFile "$env:AGENT_TEMPDIRECTORY\downloadjdk\microsoft-jdk-21-windows-x64.zip"
              - task: JavaToolInstaller@0
                displayName: Use Java 21
                inputs:
                  versionSpec: "21"
                  jdkArchitectureOption: x64
                  jdkSourceOption: LocalDirectory
                  jdkFile: $(Agent.TempDirectory)/downloadjdk/microsoft-jdk-21-windows-x64.zip
                  jdkDestinationDirectory: $(Agent.ToolsDirectory)/ms-jdk21
              - script: java --version
                displayName: 'Check Java installation'
              - task: Npm@1
                displayName: npm install
                inputs:
                  verbose: false
              - task: Npm@1
                displayName: npm run lint
                inputs:
                  command: custom
                  verbose: false
                  customCommand: run lint
              - task: Npm@1
                displayName: npm run build-plugin
                inputs:
                  command: custom
                  verbose: false
                  customCommand: run build-plugin
              - task: PowerShell@2
                displayName: Sign Jars
                inputs:
                  targetType: 'inline'
                  script: |-
                    $files = Get-ChildItem -Path . -Recurse -Filter "com.microsoft.java.test.*.jar"
                    foreach ($file in $files) {
                        $fileName = $file.Name
                        & dotnet "$env:MBSIGN_APPFOLDER\DDSignFiles.dll" /file:"$fileName" /certs:100010171
                    }
                  workingDirectory: 'server'
              - task: CmdLine@2
                displayName: Replace AI Key
                inputs:
                  script: npx json@9.0.6 -I -f package.json -e "this.aiKey=\"%AI_KEY%\""
              - task: CmdLine@2
                displayName: vsce package
                inputs:
                  script: npx @vscode/vsce@latest package -o extension.vsix
              ### Copy files for APIScan
              - task: CopyFiles@2
                displayName: "Copy Files for APIScan"
                inputs:
                  Contents: "*.vsix"
                  TargetFolder: $(Agent.TempDirectory)/APIScanFiles
                condition: and(succeeded(), ne(variables['DisableAPIScan'], 'true'))
              ### Run latest version of APIScan listed at https://www.1eswiki.com/wiki/APIScan_Build_Task
              - task: APIScan@2
                displayName: Run APIScan
                inputs:
                  softwareFolder: $(Agent.TempDirectory)/APIScanFiles
                  softwareName: "vscode-java-test"
                  softwareVersionNum: "$(Build.BuildId)"
                  isLargeApp: false
                  toolVersion: "Latest"
                condition: and(succeeded(), ne(variables['DisableAPIScan'], 'true'))
                env:
                  AzureServicesAuthConnectionString: runAs=App;AppId=$(ApiScanClientId);TenantId=$(ApiScanTenant);AppKey=$(ApiScanSecret)
              - script: npx @vscode/vsce@latest generate-manifest -i extension.vsix -o extension.manifest
                displayName: 'Generate extension manifest'
              - script: copy extension.manifest extension.signature.p7s
                displayName: 'Prepare manifest for signing'
              - task: CmdLine@2
                displayName: Sign extension
                inputs:
                  script: dotnet %MBSIGN_APPFOLDER%/ddsignfiles.dll /file:extension.signature.p7s /certs:4014052
              - task: CopyFiles@2
                displayName: "Copy Files to: $(Build.ArtifactStagingDirectory)"
                inputs:
                  Contents: |
                    extension.vsix
                    extension.manifest
                    extension.signature.p7s
                  TargetFolder: $(Build.ArtifactStagingDirectory)
