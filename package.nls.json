{
    "description": "Run and debug JUnit or TestNG test cases.",
    "contributes.commands.java.test.editor.run.title": "Run Tests",
    "contributes.commands.java.test.editor.debug.title": "Debug Tests",
    "contributes.commands.java.test.runFromJavaProjectExplorer.title": "Run Tests",
    "contributes.commands.java.test.debugFromJavaProjectExplorer.title": "Debug Tests",
    "contributes.commands.java.test.goToTest.title": "Go to Test",
    "contributes.commands.java.test.goToTestSubject.title": "Go to Test Subject",
    "configuration.java.test.defaultConfig.description": "Specify the name of the default test configuration.",
    "configuration.java.test.config.description": "Specify the configurations for running the tests.",
    "configuration.java.test.config.item.description": "Specify the configuration item for running the tests.",
    "configuration.java.test.config.name.description": "Specify the name of the configuration item.",
    "configuration.java.test.config.workingDirectory.description": "Specify the working directory when running the tests.",
    "configuration.java.test.config.classPaths.description": "The classpaths defined in this setting will be appended to the resolved classpaths.",
    "configuration.java.test.config.classPaths.auto.description": "Automatically resolve the classpaths of current project.",
    "configuration.java.test.config.classPaths.runtime.description": "The classpaths within 'runtime' scope of current project.",
    "configuration.java.test.config.classPaths.test.description": "The classpaths within 'test' scope of current project.",
    "configuration.java.test.config.classPaths.exclude.description": "The path after '!' will be excluded from the classpaths.",
    "configuration.java.test.config.modulePaths.description": "The modulepaths defined in this setting will be appended to the resolved modulepaths.",
    "configuration.java.test.config.modulePaths.auto.description": "Automatically resolve the modulepaths of current project.",
    "configuration.java.test.config.modulePaths.runtime.description": "The modulepaths within 'runtime' scope of current project.",
    "configuration.java.test.config.modulePaths.test.description": "The modulepaths within 'test' scope of current project.",
    "configuration.java.test.config.modulePaths.exclude.description": "The path after '!' will be excluded from the modulePaths.",
    "configuration.java.test.config.vmArgs.description": "Specify the extra options and system properties for the JVM.",
    "configuration.java.test.config.args.description": "Specify the command line arguments which will be passed to the test runner.",
    "configuration.java.test.config.env.description": "Specify the extra environment variables when running the tests.",
    "configuration.java.test.config.envFile.description": "Specify the absolute path to a file containing environment variable definitions.",
    "configuration.java.test.config.sourcePaths.description": "Specify extra source paths when debugging the tests.",
    "configuration.java.test.config.preLaunchTask.description": "Specify the label of a task specified in tasks.json (in the workspace's .vscode folder). The task will be launched before the start of testing.",
    "configuration.java.test.config.postDebugTask.description": "Specify the label of a task specified in tasks.json (in the workspace's .vscode folder). The task will be launched at the very end of testing.",
    "configuration.java.test.config.testKind.description": "Specify the targeting test framework for this test configuration. Supported values are `junit`, `testng`.",
    "configuration.java.test.config.filters.description": "Specify the test filters.",
    "configuration.java.test.config.filters.tags.description": "Specify the tags to be included or excluded. \n\nTags having `!` as the prefix will be **excluded**. \n\nNote: This setting **only** takes effect when `testKind` is set to `junit`.",
    "configuration.java.test.config.when.description": "Specify the when clause for matching tests by to determine if the configuration should be run with.\n\nNote: `testItem =~ /<regular-expression>/` is the only supported clause currently, where `testItem` is the fully-qualified name of a test class or method. For example:\n- `testItem =~ /^com\\.company\\.package\\.test/` - a package with the name \"com.company.package.test\".\n- `testItem =~ /(?<=\\.)Test/` - a class with a name containing \"Test\".\n\nWhen launching a test that satisfies a single configuration's when clause, it will be run with that configuration. If multiple configurations are satisfied, the user will be prompted to pick which configuration to run with.\n\nWhen launching multiple tests (e.g. for a class or package), a configuration's when clause must be satisfied for **all** tests to be considered.\n\nConfigurations that do not define a when clause will match all tests.",
    "configuration.java.test.config.javaExec.description": "The path to java executable to use. For example: `C:\\Program Files\\jdk\\bin\\java.exe`. If unset project JDK's java executable is used.",
    "configuration.java.test.config.coverage.description": "The configurations for test coverage.",
    "configuration.java.test.config.coverage.appendResult.description": "Whether the coverage result is appended.",
    "contributes.viewsWelcome.inLightWeightMode": "No test cases are listed because the Java Language Server is currently running in [LightWeight Mode](https://aka.ms/vscode-java-lightweight). To show test cases, click on the button to switch to Standard Mode.\n[Switch to Standard Mode](command:java.server.mode.switch?%5B%22Standard%22,true%5D)",
    "contributes.viewsWelcome.enableTests": "Click below button to configure a test framework for your project.\n[Enable Java Tests](command:_java.test.enableTests)"
}
